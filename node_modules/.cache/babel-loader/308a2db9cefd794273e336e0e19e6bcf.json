{"ast":null,"code":"var _jsxFileName = \"/Users/ketanrikame/Desktop/weather-today/src/components/daily-data/daily-data.component.jsx\";\nimport React from 'react';\nimport './daily-data.styles.css'; // const DailyData = props => (\n// <h2>fg</h2>\n// // );\n// export default DailyData;\n\nclass DailyData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: '',\n      lon: '',\n      appId: '9b66a9c4055d9d1f99e3bdcdd1dbfa69',\n      dailyData: [],\n      options: {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: 'My chart'\n        },\n        series: [{\n          data: [1, 2, 1, 4, 3, 6]\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    const lat = this.props.location.state.lat;\n    const lon = this.props.location.state.lon;\n    axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=hourly\" + \"&APPID=\" + appId + \"&units=metric\").then(response => {\n      this.setState({\n        dailyData: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"DailyData\"));\n  }\n\n}\n\nexport default DailyData;","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/weather-today/src/components/daily-data/daily-data.component.jsx"],"names":["React","DailyData","Component","constructor","state","lat","lon","appId","dailyData","options","chart","type","title","text","series","data","componentDidMount","props","location","axios","get","then","response","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP,C,CAGA;AACA;AAEA;AAEA;;AAEA,MAAMC,SAAN,SAAwBC,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAC,EADO;AAEXC,MAAAA,GAAG,EAAC,EAFO;AAGXC,MAAAA,KAAK,EAAC,kCAHK;AAIXC,MAAAA,SAAS,EAAC,EAJC;AAKXC,MAAAA,OAAO,EAAG;AACRC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SADC;AAIRC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SAJC;AAORC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AADR,SADM;AAPA;AALC,KAAb;AAmBH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMX,GAAG,GAAG,KAAKY,KAAL,CAAWC,QAAX,CAAoBd,KAApB,CAA0BC,GAAtC;AACA,UAAMC,GAAG,GAAG,KAAKW,KAAL,CAAWC,QAAX,CAAoBd,KAApB,CAA0BE,GAAtC;AAEAa,IAAAA,KAAK,CACJC,GADD,CAEE,yDACEf,GADF,GAEE,OAFF,GAGCC,GAHD,GAGO,iBAHP,GAIE,SAJF,GAKEC,KALF,GAKU,eAPZ,EAQEc,IARF,CAQOC,QAAQ,IAAG;AAChB,WAAKC,QAAL,CAAc;AAACf,QAAAA,SAAS,EAACc,QAAQ,CAACP;AAApB,OAAd;AACD,KAVD;AAWH;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADJ;AAKD;;AAjD6B;;AAoDhC,eAAevB,SAAf","sourcesContent":["import React from 'react';\nimport './daily-data.styles.css';\n\n\n// const DailyData = props => (\n// <h2>fg</h2>\n\n// // );\n\n// export default DailyData;\n\nclass DailyData extends Component {\n\n    constructor() {\n        super();\n    \n        this.state = {\n          lat:'',\n          lon:'',\n          appId:'9b66a9c4055d9d1f99e3bdcdd1dbfa69',\n          dailyData:[],\n          options : {\n            chart: {\n              type: 'spline'\n            },\n            title: {\n              text: 'My chart'\n            },\n            series: [\n              {\n                data: [1, 2, 1, 4, 3, 6]\n              }\n            ]\n          }\n        };\n    }\n\n    componentDidMount() {\n        const lat = this.props.location.state.lat\n        const lon = this.props.location.state.lon\n\n        axios\n        .get(\n          \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n            lat+\n            \"&lon=\" +\n           lon + \"&exclude=hourly\"+\n            \"&APPID=\" +\n            appId + \"&units=metric\"\n        ).then(response =>{\n          this.setState({dailyData:response.data});\n        })\n    }\n\n    render() {\n      return (\n          <div>\n            <h2>DailyData</h2>\n          </div>\n      );\n    }\n  }\n  \n  export default DailyData;\n"]},"metadata":{},"sourceType":"module"}