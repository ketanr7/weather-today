{"ast":null,"code":"var _jsxFileName = \"/Users/ketanrikame/Desktop/weather-today/src/App.js\";\nimport React, { Component } from 'react'; //import axios from 'axios';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'; //import Highcharts from 'highcharts';\n//import HighchartsReact from 'highcharts-react-official';\n//import { CardList } from './components/card-list/card-list.component';\n\nimport Home from './components/home/home.component'; //import { SearchBox } from './components/search-box/search-box.component';\n// import { Route } from 'react-router-dom';\n// Step 2 - Include the react-fusioncharts component\n\nimport ReactFC from \"react-fusioncharts\"; // Step 3 - Include the fusioncharts library\n\nimport FusionCharts from \"fusioncharts\"; // Step 4 - Include the chart type\n\nimport Column2D from \"fusioncharts/fusioncharts.charts\"; // Step 5 - Include the theme as fusion\n\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\"; // Step 6 - Adding the chart and theme as dependency to the core fusioncharts\n\nimport DailyData from './components/daily-data/daily-data.component';\nimport './App.css';\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\nconst google = window.google;\nconst chartData = [{\n  label: \"Venezuela\",\n  value: \"290\"\n}, {\n  label: \"Saudi\",\n  value: \"260\"\n}, {\n  label: \"Canada\",\n  value: \"180\"\n}, {\n  label: \"Iran\",\n  value: \"140\"\n}, {\n  label: \"Russia\",\n  value: \"115\"\n}, {\n  label: \"UAE\",\n  value: \"100\"\n}, {\n  label: \"US\",\n  value: \"30\"\n}, {\n  label: \"China\",\n  value: \"30\"\n}];\nconst chartConfigs = {\n  type: \"column2d\",\n  // The chart type\n  width: \"700\",\n  // Width of the chart\n  height: \"400\",\n  // Height of the chart\n  dataFormat: \"json\",\n  // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      caption: \"Countries With Most Oil Reserves [2017-18]\",\n      //Set the chart caption\n      subCaption: \"In MMbbl = One Million barrels\",\n      //Set the chart subcaption\n      xAxisName: \"Country\",\n      //Set the x-axis name\n      yAxisName: \"Reserves (MMbbl)\",\n      //Set the y-axis name\n      numberSuffix: \"K\",\n      theme: \"fusion\" //Set the theme for your chart\n\n    },\n    // Chart Data - from step 2\n    data: chartData\n  }\n};\n\nclass App extends Component {\n  render() {\n    // const { monsters, searchField } = this.state;\n    // const filteredMonsters = monsters.filter(monster =>\n    //   monster.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:city/:day\",\n      component: DailyData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/weather-today/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Home","ReactFC","FusionCharts","Column2D","FusionTheme","DailyData","fcRoot","google","window","chartData","label","value","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","data","App","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n//import Highcharts from 'highcharts';\n//import HighchartsReact from 'highcharts-react-official';\n//import { CardList } from './components/card-list/card-list.component';\nimport Home from './components/home/home.component';\n//import { SearchBox } from './components/search-box/search-box.component';\n// import { Route } from 'react-router-dom';\n\n// Step 2 - Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Step 3 - Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Step 4 - Include the chart type\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\n\n// Step 5 - Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\n// Step 6 - Adding the chart and theme as dependency to the core fusioncharts\n\nimport DailyData from './components/daily-data/daily-data.component';\n\nimport './App.css';\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst google = window.google;\n\nconst chartData = [\n  {\n    label: \"Venezuela\",\n    value: \"290\"\n  },\n  {\n    label: \"Saudi\",\n    value: \"260\"\n  },\n  {\n    label: \"Canada\",\n    value: \"180\"\n  },\n  {\n    label: \"Iran\",\n    value: \"140\"\n  },\n  {\n    label: \"Russia\",\n    value: \"115\"\n  },\n  {\n    label: \"UAE\",\n    value: \"100\"\n  },\n  {\n    label: \"US\",\n    value: \"30\"\n  },\n  {\n    label: \"China\",\n    value: \"30\"\n  }\n];\nconst chartConfigs = {\n  type: \"column2d\", // The chart type\n  width: \"700\", // Width of the chart\n  height: \"400\", // Height of the chart\n  dataFormat: \"json\", // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\n      subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\n      xAxisName: \"Country\",           //Set the x-axis name\n      yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\n      numberSuffix: \"K\",\n      theme: \"fusion\"                 //Set the theme for your chart\n    },\n    // Chart Data - from step 2\n    data: chartData\n  }\n};\n\nclass App extends Component {\n\n\n\n\n\n\n\n  render() {\n    // const { monsters, searchField } = this.state;\n    // const filteredMonsters = monsters.filter(monster =>\n    //   monster.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n\n    return (\n      <Router>\n      <div>\n       <ReactFC {...chartConfigs} />\n        <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/:city/:day' component={DailyData} />\n            \n        </Switch>\n      </div>\n    </Router>\n   \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}