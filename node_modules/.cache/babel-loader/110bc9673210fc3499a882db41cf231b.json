{"ast":null,"code":"var _jsxFileName = \"/Users/ketanrikame/Desktop/weather-today/src/components/daily-data/daily-data.component.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsWrapper from \"../chart/chart.component\";\nimport \"./daily-data.styles.css\";\n\nclass DailyData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      temp_now: \"\",\n      max: \"\",\n      min: \"\",\n      imgUrl: \"\",\n      lat: \"\",\n      lon: \"\",\n      appId: \"9b66a9c4055d9d1f99e3bdcdd1dbfa69\",\n      dailyData: {},\n      hourlyData: [],\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: \"spline\"\n        },\n        title: {\n          text: \"My chart\"\n        },\n        xAxis: {\n          title: {\n            text: \"\"\n          },\n          labels: {\n            formatter: function () {\n              return this.value;\n            }\n          },\n          categories: []\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const lat = this.props.location.state.lat;\n    const lon = this.props.location.state.lon;\n    const date = this.props.match.params.day;\n    axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=\" + \"&dt=\" + this.props.match.params.day + \"&APPID=\" + this.state.appId + \"&units=metric\").then(response => {\n      var temp = response.data.daily.filter(function (data) {\n        return data.dt == date;\n      });\n      this.setState({\n        dailyData: temp[0]\n      });\n      this.setState({\n        imgUrl: this.state.dailyData.weather[0].icon\n      });\n      this.setState({\n        temp_now: this.state.dailyData.temp.day\n      });\n      this.setState({\n        max: this.state.dailyData.temp.max\n      });\n      this.setState({\n        min: this.state.dailyData.temp.min\n      });\n      const info = response.data.hourly.map(girl => Number(girl.temp.toFixed()));\n\n      let _this = this;\n\n      _this.setState({\n        series: [{\n          data: info\n        }]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outer-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dailycard-container temp_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-div daily-img-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"monster\",\n      src: `http://openweathermap.org/img/w/${this.state.imgUrl}.png`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      unix: true,\n      format: \"ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, this.state.dailyData.dt))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"city-div daily-city-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, parseFloat(this.state.temp_now).toFixed(), \"\\u2103\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, this.props.match.params.city)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"High\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, parseFloat(this.state.max).toFixed(), \"\\u2103\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Low\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, parseFloat(this.state.min).toFixed(), \"\\u2103\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Latitude\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, this.props.location.state.lat)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Longitude\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, this.props.location.state.lon)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Pressure\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, this.state.dailyData.pressure, \" hpa\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Humidity\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, this.state.dailyData.humidity, \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsWrapper, {\n      chartData: this.state.series,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Sunrise\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      unix: true,\n      format: \"h:mm a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, this.state.dailyData.sunrise))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div daily-info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Sunset\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      unix: true,\n      format: \"h:mm a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, this.state.dailyData.sunset)))));\n  }\n\n}\n\nexport default DailyData;","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/weather-today/src/components/daily-data/daily-data.component.jsx"],"names":["React","Component","axios","Moment","Highcharts","HighchartsReact","HighchartsWrapper","DailyData","constructor","state","temp_now","max","min","imgUrl","lat","lon","appId","dailyData","hourlyData","series","data","options","chart","type","title","text","xAxis","labels","formatter","value","categories","componentDidMount","props","location","date","match","params","day","get","then","response","temp","daily","filter","dt","setState","weather","icon","info","hourly","map","girl","Number","toFixed","_this","render","parseFloat","city","pressure","humidity","sunrise","sunset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nimport HighchartsWrapper from \"../chart/chart.component\";\n\nimport \"./daily-data.styles.css\";\n\nclass DailyData extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      temp_now: \"\",\n      max: \"\",\n      min: \"\",\n      imgUrl: \"\",\n      lat: \"\",\n      lon: \"\",\n      appId: \"9b66a9c4055d9d1f99e3bdcdd1dbfa69\",\n      dailyData: {},\n      hourlyData: [],\n      series: [\n        {\n          data: [],\n        },\n      ],\n      options: {\n        chart: {\n          type: \"spline\",\n        },\n        title: {\n          text: \"My chart\",\n        },\n        xAxis: {\n          title: {\n            text: \"\",\n          },\n          labels: {\n            formatter: function () {\n              return this.value;\n            },\n          },\n          categories: [],\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const lat = this.props.location.state.lat;\n    const lon = this.props.location.state.lon;\n    const date = this.props.match.params.day;\n    axios\n      .get(\n        \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n          lat +\n          \"&lon=\" +\n          lon +\n          \"&exclude=\" +\n          \"&dt=\" +\n          this.props.match.params.day +\n          \"&APPID=\" +\n          this.state.appId +\n          \"&units=metric\"\n      )\n      .then((response) => {\n        var temp = response.data.daily.filter(function (data) {\n          return data.dt == date;\n        });\n\n        this.setState({ dailyData: temp[0] });\n\n        this.setState({ imgUrl: this.state.dailyData.weather[0].icon });\n        this.setState({ temp_now: this.state.dailyData.temp.day });\n        this.setState({ max: this.state.dailyData.temp.max });\n        this.setState({ min: this.state.dailyData.temp.min });\n\n        const info = response.data.hourly.map((girl) =>\n          Number(girl.temp.toFixed())\n        );\n\n        let _this = this;\n\n        _this.setState({ series: [{ data: info }] });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"outer-div\">\n        {/* <ReactFC {...chartConfigs} /> */}\n\n        <div className=\"dailycard-container temp_container\">\n          <div className=\"img-div daily-img-div\">\n            <img\n              alt=\"monster\"\n              src={`http://openweathermap.org/img/w/${this.state.imgUrl}.png`}\n            />\n            <p>\n              <Moment unix format=\"ddd\">\n                {this.state.dailyData.dt}\n              </Moment>\n            </p>\n          </div>\n          <div className=\"city-div daily-city-div\">\n            <h2>{parseFloat(this.state.temp_now).toFixed()}&#8451;</h2>\n            <h4>{this.props.match.params.city}</h4>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>High</p>\n            <h5>{parseFloat(this.state.max).toFixed()}&#8451;</h5>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>Low</p>\n            <h5>{parseFloat(this.state.min).toFixed()}&#8451;</h5>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>Latitude</p>\n            <h5>{this.props.location.state.lat}</h5>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>Longitude</p>\n            <h5>{this.props.location.state.lon}</h5>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>Pressure</p>\n            <h5>{this.state.dailyData.pressure} hpa</h5>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>Humidity</p>\n            <h5>{this.state.dailyData.humidity} %</h5>\n          </div>\n          <div>\n            <HighchartsWrapper chartData={this.state.series} />\n          </div>\n\n          <div className=\"info-div daily-info-div\">\n            <p>Sunrise</p>\n            <h5>\n              <Moment unix format=\"h:mm a\">\n                {this.state.dailyData.sunrise}\n              </Moment>\n            </h5>\n          </div>\n          <div className=\"info-div daily-info-div\">\n            <p>Sunset</p>\n            <h5>\n              <Moment unix format=\"h:mm a\">\n                {this.state.dailyData.sunset}\n              </Moment>\n            </h5>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DailyData;\n"]},"metadata":{},"sourceType":"module"}