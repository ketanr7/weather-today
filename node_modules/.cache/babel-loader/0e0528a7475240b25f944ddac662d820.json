{"ast":null,"code":"var _jsxFileName = \"/Users/ketanrikame/Desktop/weather-today/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getWeather = () => {\n      const lat = this.state.location.lat;\n      const lon = this.state.location.lon;\n      const appId = this.state.appId;\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + lat + \"&lon=\" + lon + \"&APPID=\" + appId);\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchField: event.target.value\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      location: {},\n      searchField: '',\n      appId: '9b66a9c4055d9d1f99e3bdcdd1dbfa69'\n    }; //this.getWeather = this.getWeather.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n\n    if (\"geolocation\" in navigator) {\n      //document.getElementById(\"loader\").style.display = \"block\";\n      //document.getElementById(\"myDiv\").style.opacity = \"0.1\";\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          location: position.coords\n        }, () => {\n          this.getWeather();\n        });\n      }, error => {\n        console.log('location1');\n        axios.get('http://ip-api.com/json').then(response => {\n          this.setState({\n            location: response.data\n          }, () => {\n            this.getWeather();\n          });\n        });\n      });\n    } else {\n      // fetch(\"http://ip-api.com/json\")\n      // .then(response => response.json())\n      // .then(json => this.setState({location:json}));\n      console.log('location');\n      axios.get('http://ip-api.com/json').then(response => {\n        this.setState({\n          location: response.data\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Monsters Rolodex\"), /*#__PURE__*/React.createElement(SearchBox, {\n      onSearchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/weather-today/src/App.js"],"names":["React","Component","axios","CardList","SearchBox","App","constructor","getWeather","lat","state","location","lon","appId","get","onSearchChange","event","setState","searchField","target","value","monsters","componentDidMount","fetch","then","response","json","users","navigator","geolocation","getCurrentPosition","position","coords","error","console","log","data","render","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters:[],\n      location: {},\n      searchField: '',\n      appId:'9b66a9c4055d9d1f99e3bdcdd1dbfa69'\n    };\n    //this.getWeather = this.getWeather.bind(this);\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n    \n\n      if (\"geolocation\" in navigator) { \n        //document.getElementById(\"loader\").style.display = \"block\";\n        //document.getElementById(\"myDiv\").style.opacity = \"0.1\";\n       navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.setState({location:position.coords},() => {this.getWeather();});\n        },\n        (error) => {\n          console.log('location1')\n          axios.get('http://ip-api.com/json')\n          .then(response => {\n            this.setState({ location: response.data},() => {this.getWeather();});\n          })\n\n        }\n      );\n      } else {\n        // fetch(\"http://ip-api.com/json\")\n        // .then(response => response.json())\n        // .then(json => this.setState({location:json}));\n        console.log('location')\n        axios.get('http://ip-api.com/json')\n        .then(response => {\n          this.setState({ location: response.data});\n        })\n      }\n  \n    \n  }\n\n  getWeather = () => {\n    const lat = this.state.location.lat\n    const lon = this.state.location.lon\n    const appId = this.state.appId\n    axios\n    .get(\n      \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat+\n        \"&lon=\" +\n       lon +\n        \"&APPID=\" +\n        appId\n    )\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox onSearchChange={this.onSearchChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}