{"ast":null,"code":"var _jsxFileName = \"/Users/ketanrikame/Desktop/weather-today/src/components/home/home.component.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { CardList } from '../card-list/card-list.component'; //import { SearchBox } from './components/search-box/search-box.component';\n// import { Route } from 'react-router-dom';\n//import './App.css';\n\nconst google = window.google;\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.getWeather = () => {\n      const lat = this.state.lat;\n      const lon = this.state.lon;\n      const appId = this.state.appId; // axios\n      // .get(\n      //   \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n      //     lat+\n      //     \"&lon=\" +\n      //    lon +\n      //     \"&APPID=\" +\n      //     appId+ \"&units=metric\"\n      // )\n\n      axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=hourly\" + \"&APPID=\" + appId + \"&units=metric\").then(response => {\n        this.setState({\n          weeklyData: response.data.daily\n        });\n      });\n    };\n\n    this.handlePlaceChanged = () => {\n      const place = this.autocomplete.getPlace();\n      console.log('ppp', place);\n      const lat = place.geometry.location.lat();\n      const lon = place.geometry.location.lng();\n      this.setState({\n        city: place.address_components[0].long_name,\n        lat: place.geometry.location.lat(),\n        lon: place.geometry.location.lng()\n      });\n      const appId = this.state.appId;\n      console.log('p', lat, lon);\n      axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=hourly\" + \"&APPID=\" + appId + \"&units=metric\").then(response => {\n        this.setState({\n          weeklyData: response.data.daily\n        }); //this.setState({city:place});\n      });\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchField: event.target.value\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      lat: '',\n      lon: '',\n      city: '',\n      searchField: '',\n      appId: '9b66a9c4055d9d1f99e3bdcdd1dbfa69',\n      weeklyData: [],\n      options: {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: 'My chart'\n        },\n        series: [{\n          data: [1, 2, 1, 4, 3, 6]\n        }]\n      }\n    };\n    this.autocompleteInput = React.createRef();\n    this.autocomplete = null; //this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n    //this.getWeather = this.getWeather.bind(this);\n\n    const google = window.google;\n  }\n\n  componentDidMount() {\n    this.autocomplete = new google.maps.places.Autocomplete(this.autocompleteInput.current, {\n      \"types\": [\"geocode\"]\n    });\n    this.autocomplete.addListener('place_changed', this.handlePlaceChanged);\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n\n    if (\"geolocation\" in navigator) {\n      //document.getElementById(\"loader\").style.display = \"block\";\n      //document.getElementById(\"myDiv\").style.opacity = \"0.1\";\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        }, () => {\n          this.getWeather();\n        });\n      }, error => {\n        console.log('location1');\n        axios.get('http://ip-api.com/json').then(response => {\n          this.setState({\n            lat: response.data.lat,\n            lon: response.data.lon\n          }, () => {\n            this.getWeather();\n          });\n        });\n      });\n    } else {\n      // fetch(\"http://ip-api.com/json\")\n      // .then(response => response.json())\n      // .then(json => this.setState({location:json}));\n      console.log('location');\n      axios.get('http://ip-api.com/json').then(response => {\n        this.setState({\n          lat: response.data.lat,\n          lon: response.data.lon\n        }, () => {\n          this.getWeather();\n        });\n      });\n    }\n  }\n\n  render() {\n    // const { monsters, searchField } = this.state;\n    // const filteredMonsters = monsters.filter(monster =>\n    //   monster.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, \"Monsters Rolodex\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-map-marker-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.autocompleteInput,\n      id: \"autocomplete\",\n      placeholder: \"Enter city name\",\n      type: \"text\",\n      className: \"searchBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(CardList, {\n      weeklyData: this.state.weeklyData,\n      lat: this.state.lat,\n      lon: this.state.lon,\n      city: this.state.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/weather-today/src/components/home/home.component.jsx"],"names":["React","Component","axios","BrowserRouter","Router","Switch","Route","Link","Highcharts","HighchartsReact","CardList","google","window","Home","constructor","getWeather","lat","state","lon","appId","get","then","response","setState","weeklyData","data","daily","handlePlaceChanged","place","autocomplete","getPlace","console","log","geometry","location","lng","city","address_components","long_name","onSearchChange","event","searchField","target","value","monsters","options","chart","type","title","text","series","autocompleteInput","createRef","componentDidMount","maps","places","Autocomplete","current","addListener","fetch","json","users","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { CardList } from '../card-list/card-list.component';\n//import { SearchBox } from './components/search-box/search-box.component';\n// import { Route } from 'react-router-dom';\n\n//import './App.css';\nconst google = window.google;\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters:[],\n      lat:'',\n      lon:'',\n      city:'',\n      searchField: '',\n      appId:'9b66a9c4055d9d1f99e3bdcdd1dbfa69',\n      weeklyData:[],\n      options : {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: 'My chart'\n        },\n        series: [\n          {\n            data: [1, 2, 1, 4, 3, 6]\n          }\n        ]\n      }\n    };\n    this.autocompleteInput = React.createRef();\n    this.autocomplete = null;\n    //this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n    //this.getWeather = this.getWeather.bind(this);\n    const google = window.google;\n\n  }\n\n  componentDidMount() {\n    this.autocomplete = new google.maps.places.Autocomplete(this.autocompleteInput.current,\n      {\"types\": [\"geocode\"]});\n\n  this.autocomplete.addListener('place_changed', this.handlePlaceChanged);\n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n    \n\n      if (\"geolocation\" in navigator) { \n        //document.getElementById(\"loader\").style.display = \"block\";\n        //document.getElementById(\"myDiv\").style.opacity = \"0.1\";\n       navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.setState({lat:position.coords.latitude,lon:position.coords.longitude},() => {this.getWeather();});\n        },\n        (error) => {\n          console.log('location1')\n          axios.get('http://ip-api.com/json')\n          .then(response => {\n            this.setState({lat:response.data.lat,lon:response.data.lon},() => {this.getWeather();});\n          })\n\n        }\n      );\n      } else {\n        // fetch(\"http://ip-api.com/json\")\n        // .then(response => response.json())\n        // .then(json => this.setState({location:json}));\n        console.log('location')\n        axios.get('http://ip-api.com/json')\n        .then(response => {\n           this.setState({lat:response.data.lat,lon:response.data.lon},() => {this.getWeather();});\n        })\n      }\n  \n    \n  }\n\n  getWeather = () => {\n    const lat = this.state.lat\n    const lon = this.state.lon\n    const appId = this.state.appId\n    // axios\n    // .get(\n    //   \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n    //     lat+\n    //     \"&lon=\" +\n    //    lon +\n    //     \"&APPID=\" +\n    //     appId+ \"&units=metric\"\n    // )\n    axios\n    .get(\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n        lat+\n        \"&lon=\" +\n       lon + \"&exclude=hourly\"+\n        \"&APPID=\" +\n        appId + \"&units=metric\"\n    ).then(response =>{\n      this.setState({weeklyData:response.data.daily});\n    })\n    \n  }\n\n  handlePlaceChanged = () => {\n    const place = this.autocomplete.getPlace();\n    console.log('ppp',place)\n    \n\n   const lat = place.geometry.location.lat()\n   const lon = place.geometry.location.lng();\n   this.setState({city:place.address_components[0].long_name,lat:place.geometry.location.lat(),lon:place.geometry.location.lng()});\n   const appId = this.state.appId\n    console.log('p',lat,lon)\n    axios\n    .get(\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n        lat+\n        \"&lon=\" +\n       lon + \"&exclude=hourly\"+\n        \"&APPID=\" +\n        appId + \"&units=metric\"\n    ).then(response =>{\n      this.setState({weeklyData:response.data.daily});\n      //this.setState({city:place});\n    })\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    // const { monsters, searchField } = this.state;\n    // const filteredMonsters = monsters.filter(monster =>\n    //   monster.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n\n    return (\n     \n      <div className='App'>\n      \n      <h1>Monsters Rolodex</h1>\n        {/* <SearchBox onSearchChange={this.onSearchChange} /> */}\n        {/* <i className='fa fa-home'></i> */}\n        <div className=\"input-div\">\n        <i className=\"fas fa-map-marker-alt\"></i>\n                <input ref={this.autocompleteInput}  id=\"autocomplete\" placeholder=\"Enter city name\"\n         type=\"text\" className=\"searchBar\"></input>\n         <i className=\"fas fa-search\"></i>\n         </div>\n        <CardList weeklyData={this.state.weeklyData} lat={this.state.lat} lon={this.state.lon} city={this.state.city}/>\n        {/* <div>\n    <HighchartsReact highcharts={Highcharts} options={this.state.options} />\n  </div>\n         */}\n      </div>\n   \n   \n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}