{"ast":null,"code":"var _jsxFileName = \"/Users/ketanrikame/Desktop/weather-today/src/components/daily-data/daily-data.component.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official'; // Step 2 - Include the react-fusioncharts component\n\nimport ReactFC from \"react-fusioncharts\"; // Step 3 - Include the fusioncharts library\n\nimport FusionCharts from \"fusioncharts\"; // Step 4 - Include the chart type\n\nimport Column2D from \"fusioncharts/fusioncharts.charts\"; // Step 5 - Include the theme as fusion\n\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\"; // Step 6 - Adding the chart and theme as dependency to the core fusioncharts\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\nimport './daily-data.styles.css';\nconst chartData = [{\n  label: \"Venezuela\",\n  value: \"290\"\n}, {\n  label: \"Saudi\",\n  value: \"260\"\n}, {\n  label: \"Canada\",\n  value: \"180\"\n}, {\n  label: \"Iran\",\n  value: \"140\"\n}, {\n  label: \"Russia\",\n  value: \"115\"\n}, {\n  label: \"UAE\",\n  value: \"100\"\n}, {\n  label: \"US\",\n  value: \"30\"\n}, {\n  label: \"China\",\n  value: \"30\"\n}];\nconst chartConfigs = {\n  type: \"column2d\",\n  // The chart type\n  width: \"700\",\n  // Width of the chart\n  height: \"400\",\n  // Height of the chart\n  dataFormat: \"json\",\n  // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      caption: \"Countries With Most Oil Reserves [2017-18]\",\n      //Set the chart caption\n      subCaption: \"In MMbbl = One Million barrels\",\n      //Set the chart subcaption\n      xAxisName: \"Country\",\n      //Set the x-axis name\n      yAxisName: \"Reserves (MMbbl)\",\n      //Set the y-axis name\n      numberSuffix: \"K\",\n      theme: \"fusion\" //Set the theme for your chart\n\n    },\n    // Chart Data - from step 2\n    data: chartData\n  }\n}; // const DailyData = props => (\n// <h2>fg</h2>\n// // );\n// export default DailyData;\n\nclass DailyData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: '',\n      lon: '',\n      appId: '9b66a9c4055d9d1f99e3bdcdd1dbfa69',\n      dailyData: {},\n      hourlyData: [],\n      options: {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: 'My chart'\n        },\n        xAxis: {\n          title: {\n            text: \"\"\n          },\n          categories: []\n        },\n        series: [{\n          data: []\n        }]\n      }\n    }; // Create a JSON object to store the chart configurations\n  }\n\n  componentDidMount() {\n    const lat = this.props.location.state.lat;\n    const lon = this.props.location.state.lon;\n    axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=\" + \"&APPID=\" + this.state.appId + \"&units=metric\").then(response => {\n      this.setState({\n        dailyData: response.data.current\n      });\n      let newArray = { ...this.state.options.chart\n      };\n      let newArray1 = { ...this.state.options.title\n      };\n      console.log(newArray, newArray1); // const options = {...this.state};\n      // console.log('nn',options)\n      // const options1 = {...options.options};\n      // console.log('nn1',options1)\n      // const options3 = {...options1.series};\n      // console.log('nn1',options3)\n      // const options4 = {...options3.data};\n      // console.log('nn1',options4)\n      //this.setState({});\n      //   const newAccess1 = {...this.state.xAxis};\n      //const newAccess2 = {...newAccess.series};\n      //const newAccess3 = {...newAccess2.data};\n      //console.log(newAccess2,newAccess3)\n      //newAccess1.categories = response.data.hourly;\n      //   this.setState({options.xAxis.categories:response.data.hourly});\n\n      const info = response.data.hourly.map(girl => girl.temp.toFixed());\n      const info2 = [{ ...newArray\n      }, { ...newArray1\n      }, info]; // this.setState({\n      //     todos: newArray,\n      //     });\n      // //options3 = info;\n      // this.setState({options3: info});\n      // //this.setState({options3: options4});\n      // this.setState({options1: options3});\n      // this.setState({options: options1});\n      //const info= response.data.hourly.map((girl) => girl.temp.toFixed());\n      // console.log('in',info)\n      // const info1 = [{...newAccess},info]\n      // console.log('iii',info1)\n      // this.setState({data: info});\n      //console.log(this.state.option3)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outer-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dailycard-container temp_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, parseFloat(this.state.dailyData.temp).toFixed(), \"\\u2103\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      unix: true,\n      format: \"ddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 12\n      }\n    }, this.state.dailyData.dt))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, \"Latitude\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, this.props.location.state.lat)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Longitude\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, this.props.location.state.lon)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, \"Pressure\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, this.state.dailyData.pressure, \" hpa\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, \"Humidity\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, this.state.dailyData.humidity, \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, \"Sunrise\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      unix: true,\n      format: \"h:mm a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, this.state.dailyData.sunrise))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, \"Sunset\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      unix: true,\n      format: \"h:mm a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, this.state.dailyData.sunset)))));\n  }\n\n}\n\nexport default DailyData;","map":{"version":3,"sources":["/Users/ketanrikame/Desktop/weather-today/src/components/daily-data/daily-data.component.jsx"],"names":["React","Component","axios","Moment","Highcharts","HighchartsReact","ReactFC","FusionCharts","Column2D","FusionTheme","fcRoot","chartData","label","value","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","data","DailyData","constructor","state","lat","lon","appId","dailyData","hourlyData","options","title","text","xAxis","categories","series","componentDidMount","props","location","get","then","response","setState","current","newArray","newArray1","console","log","info","hourly","map","girl","temp","toFixed","info2","render","parseFloat","dt","pressure","humidity","sunrise","sunset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\n// Step 2 - Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Step 3 - Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Step 4 - Include the chart type\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\n\n// Step 5 - Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\n// Step 6 - Adding the chart and theme as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nimport './daily-data.styles.css';\n\nconst chartData = [\n    {\n      label: \"Venezuela\",\n      value: \"290\"\n    },\n    {\n      label: \"Saudi\",\n      value: \"260\"\n    },\n    {\n      label: \"Canada\",\n      value: \"180\"\n    },\n    {\n      label: \"Iran\",\n      value: \"140\"\n    },\n    {\n      label: \"Russia\",\n      value: \"115\"\n    },\n    {\n      label: \"UAE\",\n      value: \"100\"\n    },\n    {\n      label: \"US\",\n      value: \"30\"\n    },\n    {\n      label: \"China\",\n      value: \"30\"\n    }\n  ];\nconst chartConfigs = {\n    type: \"column2d\", // The chart type\n    width: \"700\", // Width of the chart\n    height: \"400\", // Height of the chart\n    dataFormat: \"json\", // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\n        subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\n        xAxisName: \"Country\",           //Set the x-axis name\n        yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\n        numberSuffix: \"K\",\n        theme: \"fusion\"                 //Set the theme for your chart\n      },\n      // Chart Data - from step 2\n      data: chartData\n    }\n  };\n// const DailyData = props => (\n// <h2>fg</h2>\n\n// // );\n\n// export default DailyData;\n\nclass DailyData extends Component {\n\n    constructor() {\n        super();\n    \n        this.state = {\n          lat:'',\n          lon:'',\n          appId:'9b66a9c4055d9d1f99e3bdcdd1dbfa69',\n          dailyData:{},\n          hourlyData:[],\n          options : {\n            chart: {\n              type: 'spline'\n            },\n            title: {\n              text: 'My chart'\n            },\n            xAxis: {\n                title: {\n                  text: \"\"\n                },\n                categories:[]\n              },\n            series: [\n              {\n                data: []\n              }\n            ]\n            \n          }\n        };\n       \n\n          // Create a JSON object to store the chart configurations\n\n    }\n\n    componentDidMount() {\n        \n        const lat = this.props.location.state.lat\n        const lon = this.props.location.state.lon\n\n        axios\n        .get(\n          \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n            lat+\n            \"&lon=\" +\n           lon + \"&exclude=\"+\n            \"&APPID=\" +\n            this.state.appId + \"&units=metric\"\n        ).then(response =>{\n          this.setState({dailyData:response.data.current});\n        \n          \n          let newArray = {...this.state.options.chart}\n          let newArray1 = {...this.state.options.title}\n          console.log(newArray,newArray1)\n        // const options = {...this.state};\n        // console.log('nn',options)\n        // const options1 = {...options.options};\n        // console.log('nn1',options1)\n        // const options3 = {...options1.series};\n        // console.log('nn1',options3)\n        // const options4 = {...options3.data};\n        // console.log('nn1',options4)\n        \n        //this.setState({});\n        //   const newAccess1 = {...this.state.xAxis};\n          //const newAccess2 = {...newAccess.series};\n          //const newAccess3 = {...newAccess2.data};\n          //console.log(newAccess2,newAccess3)\n//newAccess1.categories = response.data.hourly;\n\n        //   this.setState({options.xAxis.categories:response.data.hourly});\n    const info=response.data.hourly.map((girl) => girl.temp.toFixed());\n    const info2 = [{...newArray},{...newArray1},info]\n    // this.setState({\n    //     todos: newArray,\n    //     });\n    // //options3 = info;\n    // this.setState({options3: info});\n    // //this.setState({options3: options4});\n    // this.setState({options1: options3});\n    // this.setState({options: options1});\n        //const info= response.data.hourly.map((girl) => girl.temp.toFixed());\n        // console.log('in',info)\n        // const info1 = [{...newAccess},info]\n        // console.log('iii',info1)\n        // this.setState({data: info});\n        //console.log(this.state.option3)\n        })\n    }\n\n    render() {\n      return (\n          <div className=\"outer-div\">\n        <div className='dailycard-container temp_container'>\n        <ReactFC {...chartConfigs} />\n        <h2>{parseFloat(this.state.dailyData.temp).toFixed()}&#8451;</h2>\n        <div className=\"img-div\">\n          {/* {<img\n          alt='monster'\n          src={`http://openweathermap.org/img/w/${this.state.dailyData.weather[0].icon}.png`}\n        />} */}\n        <p><Moment unix format='ddd'>{this.state.dailyData.dt}</Moment></p>\n        </div>\n        <div className=\"info-div\">\n          <p>Latitude</p>\n          <h5>{this.props.location.state.lat}</h5>\n        </div>\n        <div className=\"info-div\">\n          <p>Longitude</p>\n          <h5>{this.props.location.state.lon}</h5>\n        </div>\n        <div className=\"info-div\">\n          <p>Pressure</p>\n          <h5>{this.state.dailyData.pressure} hpa</h5>\n        </div>\n        <div className=\"info-div\">\n          <p>Humidity</p>\n          <h5>{this.state.dailyData.humidity} %</h5>\n        </div>\n        <div>\n    <HighchartsReact highcharts={Highcharts} \n    options={this.state.options}\n     />\n  </div>\n        \n        <div className=\"info-div\">\n          <p>Sunrise</p>\n          <h5><Moment unix format='h:mm a'>{this.state.dailyData.sunrise}</Moment></h5>\n        </div>\n        <div className=\"info-div\">\n          <p>Sunset</p>\n          <h5><Moment unix format='h:mm a'>{this.state.dailyData.sunset}</Moment></h5>\n        </div>\n    \n      </div>\n      </div>\n      );\n    }\n  }\n  \n  export default DailyData;\n"]},"metadata":{},"sourceType":"module"}